@if(
  startsWith(body('Parse_Start')?['selfUri'], 'http'),
  body('Parse_Start')?['selfUri'],
  concat('https://api.mypurecloud.com.au', body('Parse_Start')?['selfUri'])
)





jobId=@{body('Parse_Start')?['jobId']},
selfUri=@{body('Parse_Start')?['selfUri']},
statusUrl=@{outputs('StatusURL')}




{
  "type": "object",
  "properties": {
    "state": { "type": "string" },
    "errorMessage": { "type": "string" },
    "downloadUrls": {
      "type": "array",
      "items": { "type": "string" }
    }
  },
  "required": ["state"]
}




{
  "type": "array",
  "items": {
    "type": "object",
    "properties": {
      "user": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "team": { "type": "string" },
          "managementUnitId": { "type": "string" }
        }
      },
      "dayMetrics": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "date": { "type": "string" },
            "adherencePercent": { "type": "number" },
            "conformancePercent": { "type": "number" },
            "exceptionDurationMinutes": { "type": "number" },
            "outOfAdherenceDurationMinutes": { "type": "number" }
          }
        }
      }
    },
    "required": ["user","dayMetrics"]
  }
}
4) Poll until the job completes (using StatusURL)

Action: Do until — Until_Complete

Condition: @equals(body('Parse_Job')?['state'], 'Complete')

Change limits: Timeout = PT15M, Delay between iterations = 15 seconds

Inside Until_Complete:

HTTP — HTTP_Get_Job

Method: GET

URI: @{outputs('StatusURL')}

Headers:

Authorization: @{concat('Bearer ', body('Parse_Token')?['access_token'])}

Parse JSON — Parse_Job

Content: Body of HTTP_Get_Job

Schema:
